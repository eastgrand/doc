{"numFailedTestSuites":5,"numFailedTests":25,"numPassedTestSuites":26,"numPassedTests":189,"numPendingTestSuites":0,"numPendingTests":4,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":31,"numTotalTests":218,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1756690387040,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Phase 2: Claude Route Integration","Session-Aware Context Management"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"Phase 2: Claude Route Integration Session-Aware Context Management should integrate session manager with conversation memory","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should integrate session manager with conversation memory"},{"ancestorTitles":["Phase 2: Claude Route Integration","Session-Aware Context Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Phase 2: Claude Route Integration Session-Aware Context Management should maintain context for follow-up queries","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should maintain context for follow-up queries"},{"ancestorTitles":["Phase 2: Claude Route Integration","Session-Aware Context Management"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phase 2: Claude Route Integration Session-Aware Context Management should clear context for new analysis queries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should clear context for new analysis queries"},{"ancestorTitles":["Phase 2: Claude Route Integration","System Prompt Context Injection"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phase 2: Claude Route Integration System Prompt Context Injection should inject conversation context for follow-up queries","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should inject conversation context for follow-up queries"},{"ancestorTitles":["Phase 2: Claude Route Integration","System Prompt Context Injection"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phase 2: Claude Route Integration System Prompt Context Injection should exclude context for new analysis queries","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should exclude context for new analysis queries"},{"ancestorTitles":["Phase 2: Claude Route Integration","Response Enhancement"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Phase 2: Claude Route Integration Response Enhancement should include session information in analysis response","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should include session information in analysis response"},{"ancestorTitles":["Phase 2: Claude Route Integration","Response Enhancement"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Phase 2: Claude Route Integration Response Enhancement should indicate no context for new sessions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should indicate no context for new sessions"},{"ancestorTitles":["Phase 2: Claude Route Integration","Memory Storage Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phase 2: Claude Route Integration Memory Storage Integration should store user and assistant messages in memory","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should store user and assistant messages in memory"},{"ancestorTitles":["Phase 2: Claude Route Integration","Memory Storage Integration"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Phase 2: Claude Route Integration Memory Storage Integration should handle memory storage errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle memory storage errors gracefully"},{"ancestorTitles":["Phase 2: Claude Route Integration","User Isolation in Claude Route"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Phase 2: Claude Route Integration User Isolation in Claude Route should handle different users with separate contexts","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle different users with separate contexts"},{"ancestorTitles":["Phase 2: Claude Route Integration","User Isolation in Claude Route"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phase 2: Claude Route Integration User Isolation in Claude Route should maintain separate conversation memories per user","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should maintain separate conversation memories per user"},{"ancestorTitles":["Phase 2: Claude Route Integration","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Phase 2: Claude Route Integration Error Handling should handle query classification API failures","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle query classification API failures"},{"ancestorTitles":["Phase 2: Claude Route Integration","Error Handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phase 2: Claude Route Integration Error Handling should handle conversation memory failures gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle conversation memory failures gracefully"}],"endTime":1756690388145,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/__tests__/phase2-claude-integration.test.ts","startTime":1756690387426,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ComparativeAnalysisProcessor Integration"],"duration":34,"failureDetails":[{"matcherResult":{"actual":"Red Bull","expected":"TurboTax","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"TurboTax\"\u001b[39m\nReceived: \u001b[31m\"Red Bull\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"TurboTax\"\u001b[39m\nReceived: \u001b[31m\"Red Bull\"\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/ComparativeAnalysisProcessor.integration.test.ts:45:49)\n    at Promise.then.completed (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ComparativeAnalysisProcessor Integration should use actual brand names from field aliases in analysis output","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should use actual brand names from field aliases in analysis output"},{"ancestorTitles":["ComparativeAnalysisProcessor Integration"],"duration":3,"failureDetails":[{"matcherResult":{"actual":"Red Bull","expected":"TurboTax","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"TurboTax\"\u001b[39m\nReceived: \u001b[31m\"Red Bull\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"TurboTax\"\u001b[39m\nReceived: \u001b[31m\"Red Bull\"\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/ComparativeAnalysisProcessor.integration.test.ts:84:49)\n    at Promise.then.completed (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ComparativeAnalysisProcessor Integration should fall back to legacy brand patterns when no field aliases provided","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should fall back to legacy brand patterns when no field aliases provided"},{"ancestorTitles":["ComparativeAnalysisProcessor Integration"],"duration":14,"failureDetails":[{"matcherResult":{"actual":"Red Bull","expected":"TurboTax","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"TurboTax\"\u001b[39m\nReceived: \u001b[31m\"Red Bull\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"TurboTax\"\u001b[39m\nReceived: \u001b[31m\"Red Bull\"\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/ComparativeAnalysisProcessor.integration.test.ts:114:49)\n    at Promise.then.completed (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ComparativeAnalysisProcessor Integration should handle mixed brand scenarios gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle mixed brand scenarios gracefully"},{"ancestorTitles":["ComparativeAnalysisProcessor Integration"],"duration":3,"failureDetails":[{"matcherResult":{"actual":"Red Bull","expected":"TurboTax","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"TurboTax\"\u001b[39m\nReceived: \u001b[31m\"Red Bull\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"TurboTax\"\u001b[39m\nReceived: \u001b[31m\"Red Bull\"\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/ComparativeAnalysisProcessor.integration.test.ts:142:49)\n    at Promise.then.completed (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ComparativeAnalysisProcessor Integration should use hardcoded brand names even with custom field data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should use hardcoded brand names even with custom field data"},{"ancestorTitles":["ComparativeAnalysisProcessor Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ComparativeAnalysisProcessor Integration should update field aliases dynamically (legacy test)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should update field aliases dynamically (legacy test)"}],"endTime":1756690388154,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComparativeAnalysisProcessor Integration › should use actual brand names from field aliases in analysis output\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"TurboTax\"\u001b[39m\n    Received: \u001b[31m\"Red Bull\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 |\u001b[39m     \u001b[90m// Verify that hardcoded brand names are used\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 44 |\u001b[39m     \u001b[36mconst\u001b[39m firstRecord \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mrecords[\u001b[35m0\u001b[39m]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 45 |\u001b[39m     expect(firstRecord\u001b[33m.\u001b[39mproperties\u001b[33m.\u001b[39mbrand_a_name)\u001b[33m.\u001b[39mtoBe(\u001b[32m'TurboTax'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Brand A = TurboTax (hardcoded)\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m     expect(firstRecord\u001b[33m.\u001b[39mproperties\u001b[33m.\u001b[39mbrand_b_name)\u001b[33m.\u001b[39mtoBe(\u001b[32m'H&R Block'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Brand B = H&R Block (hardcoded)\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m     \u001b[90m// Verify summary uses actual brand names\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlib/analysis/strategies/processors/ComparativeAnalysisProcessor.integration.test.ts\u001b[39m\u001b[0m\u001b[2m:45:49)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComparativeAnalysisProcessor Integration › should fall back to legacy brand patterns when no field aliases provided\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"TurboTax\"\u001b[39m\n    Received: \u001b[31m\"Red Bull\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 82 |\u001b[39m     \u001b[90m// Should use hardcoded brand names regardless of field aliases\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m firstRecord \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mrecords[\u001b[35m0\u001b[39m]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 84 |\u001b[39m     expect(firstRecord\u001b[33m.\u001b[39mproperties\u001b[33m.\u001b[39mbrand_a_name)\u001b[33m.\u001b[39mtoBe(\u001b[32m'TurboTax'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Brand A = TurboTax (hardcoded)\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 85 |\u001b[39m     expect(firstRecord\u001b[33m.\u001b[39mproperties\u001b[33m.\u001b[39mbrand_b_name)\u001b[33m.\u001b[39mtoBe(\u001b[32m'H&R Block'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Brand B = H&R Block (hardcoded)\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 86 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 87 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlib/analysis/strategies/processors/ComparativeAnalysisProcessor.integration.test.ts\u001b[39m\u001b[0m\u001b[2m:84:49)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComparativeAnalysisProcessor Integration › should handle mixed brand scenarios gracefully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"TurboTax\"\u001b[39m\n    Received: \u001b[31m\"Red Bull\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 112 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 113 |\u001b[39m     \u001b[36mconst\u001b[39m firstRecord \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mrecords[\u001b[35m0\u001b[39m]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 114 |\u001b[39m     expect(firstRecord\u001b[33m.\u001b[39mproperties\u001b[33m.\u001b[39mbrand_a_name)\u001b[33m.\u001b[39mtoBe(\u001b[32m'TurboTax'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Brand A = TurboTax (hardcoded)\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 115 |\u001b[39m     expect(firstRecord\u001b[33m.\u001b[39mproperties\u001b[33m.\u001b[39mbrand_b_name)\u001b[33m.\u001b[39mtoBe(\u001b[32m'H&R Block'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Brand B = H&R Block (hardcoded)\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 116 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 117 |\u001b[39m     \u001b[90m// Summary should use the hardcoded brand names\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlib/analysis/strategies/processors/ComparativeAnalysisProcessor.integration.test.ts\u001b[39m\u001b[0m\u001b[2m:114:49)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComparativeAnalysisProcessor Integration › should use hardcoded brand names even with custom field data\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"TurboTax\"\u001b[39m\n    Received: \u001b[31m\"Red Bull\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 140 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 141 |\u001b[39m     \u001b[36mconst\u001b[39m firstRecord \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mrecords[\u001b[35m0\u001b[39m]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 142 |\u001b[39m     expect(firstRecord\u001b[33m.\u001b[39mproperties\u001b[33m.\u001b[39mbrand_a_name)\u001b[33m.\u001b[39mtoBe(\u001b[32m'TurboTax'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Brand A = TurboTax (hardcoded)\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 143 |\u001b[39m     expect(firstRecord\u001b[33m.\u001b[39mproperties\u001b[33m.\u001b[39mbrand_b_name)\u001b[33m.\u001b[39mtoBe(\u001b[32m'H&R Block'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Brand B = H&R Block (hardcoded)\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 144 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 145 |\u001b[39m     \u001b[90m// Summary should use hardcoded brand names\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlib/analysis/strategies/processors/ComparativeAnalysisProcessor.integration.test.ts\u001b[39m\u001b[0m\u001b[2m:142:49)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/ComparativeAnalysisProcessor.integration.test.ts","startTime":1756690387400,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Live Chat Context Integration"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Live Chat Context Integration should handle initial chat message with analysis context","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle initial chat message with analysis context"},{"ancestorTitles":["Live Chat Context Integration"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Live Chat Context Integration should handle follow-up message using existing context","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle follow-up message using existing context"},{"ancestorTitles":["Live Chat Context Integration"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Live Chat Context Integration should not trigger new analysis for contextual chat","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should not trigger new analysis for contextual chat"},{"ancestorTitles":["Live Chat Context Integration"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Live Chat Context Integration should preserve data consistency across chat exchanges","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should preserve data consistency across chat exchanges"},{"ancestorTitles":["Server Health Check"],"duration":54,"failureDetails":[{}],"failureMessages":["TypeError: fetch failed\n    at node:internal/deps/undici/undici:15363:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/chat-context-live.test.ts:268:24)"],"fullName":"Server Health Check should have dev server running","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should have dev server running"}],"endTime":1756690388208,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mServer Health Check › should have dev server running\u001b[39m\u001b[22m\n\n    TypeError: fetch failed\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 266 |\u001b[39m   it(\u001b[32m'should have dev server running'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 267 |\u001b[39m     \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 268 |\u001b[39m       \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m`${BASE_URL}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 269 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Any response means server is up\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 270 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Dev server is accessible'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 271 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/chat-context-live.test.ts\u001b[39m\u001b[0m\u001b[2m:268:24)\u001b[22m\u001b[2m\u001b[22m\n\n    Cause:\n    AggregateError:\n\u001b[2m\u001b[22m\n\u001b[2m\u001b[22m\n","name":"/Users/voldeck/code/mpiq-ai-chat/__tests__/chat-context-live.test.ts","startTime":1756690387434,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Chat Constants Validation"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Chat Constants Validation All analysis category queries should be valid","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"All analysis category queries should be valid"},{"ancestorTitles":["Chat Constants Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Chat Constants Validation All trends category queries should be valid","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"All trends category queries should be valid"},{"ancestorTitles":["Chat Constants Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Chat Constants Validation Brand field mapping should work correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"Brand field mapping should work correctly"},{"ancestorTitles":["Chat Constants Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Chat Constants Validation Comparison queries should have correlation/comparison types","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"Comparison queries should have correlation/comparison types"},{"ancestorTitles":["Chat Constants Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Chat Constants Validation Ranking queries should have ranking/topN types","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"Ranking queries should have ranking/topN types"}],"endTime":1756690388178,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/__tests__/chat-constants-validation.test.ts","startTime":1756690387420,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Semantic Enhanced Hybrid Routing Engine","Creative Query Enhancement"],"duration":6,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/semantic-enhanced-hybrid.test.ts:25:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Semantic Enhanced Hybrid Routing Engine Creative Query Enhancement should enhance creative metaphorical queries","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should enhance creative metaphorical queries"},{"ancestorTitles":["Semantic Enhanced Hybrid Routing Engine","Creative Query Enhancement"],"duration":3,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/semantic-enhanced-hybrid.test.ts:41:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Semantic Enhanced Hybrid Routing Engine Creative Query Enhancement should enhance novel phrasing queries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"should enhance novel phrasing queries"},{"ancestorTitles":["Semantic Enhanced Hybrid Routing Engine","Creative Query Enhancement"],"duration":10,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/semantic-enhanced-hybrid.test.ts:55:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Semantic Enhanced Hybrid Routing Engine Creative Query Enhancement should handle compound queries with enhancement","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should handle compound queries with enhancement"},{"ancestorTitles":["Semantic Enhanced Hybrid Routing Engine","Structured Query Handling"],"duration":2,"failureDetails":[{"matcherResult":{"actual":"/analyze","expected":"/demographic-insights","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"/\u001b[7mdemographic-insights\u001b[27m\"\u001b[39m\nReceived: \u001b[31m\"/\u001b[7manalyze\u001b[27m\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"/\u001b[7mdemographic-insights\u001b[27m\"\u001b[39m\nReceived: \u001b[31m\"/\u001b[7manalyze\u001b[27m\"\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/semantic-enhanced-hybrid.test.ts:71:31)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Semantic Enhanced Hybrid Routing Engine Structured Query Handling should handle structured queries without unnecessary semantic enhancement","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should handle structured queries without unnecessary semantic enhancement"},{"ancestorTitles":["Semantic Enhanced Hybrid Routing Engine","Structured Query Handling"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Semantic Enhanced Hybrid Routing Engine Structured Query Handling should maintain high accuracy on predefined patterns","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should maintain high accuracy on predefined patterns"},{"ancestorTitles":["Semantic Enhanced Hybrid Routing Engine","Out-of-Scope Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Semantic Enhanced Hybrid Routing Engine Out-of-Scope Handling should properly reject out-of-scope queries","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should properly reject out-of-scope queries"},{"ancestorTitles":["Semantic Enhanced Hybrid Routing Engine","Performance and Confidence"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Semantic Enhanced Hybrid Routing Engine Performance and Confidence should complete routing within reasonable time","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should complete routing within reasonable time"},{"ancestorTitles":["Semantic Enhanced Hybrid Routing Engine","Performance and Confidence"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Semantic Enhanced Hybrid Routing Engine Performance and Confidence should provide confidence boost when semantic agrees","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should provide confidence boost when semantic agrees"},{"ancestorTitles":["Semantic Enhanced Hybrid Routing Engine","System Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Semantic Enhanced Hybrid Routing Engine System Integration should maintain all hybrid system features","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should maintain all hybrid system features"}],"endTime":1756690388225,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSemantic Enhanced Hybrid Routing Engine › Creative Query Enhancement › should enhance creative metaphorical queries\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 25 |\u001b[39m       expect(result\u001b[33m.\u001b[39msemantic_verification\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mused)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m       expect(result\u001b[33m.\u001b[39msemantic_verification\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mreasoning)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Semantic'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m`Creative Query Test:`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/semantic-enhanced-hybrid.test.ts\u001b[39m\u001b[0m\u001b[2m:25:50)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSemantic Enhanced Hybrid Routing Engine › Creative Query Enhancement › should enhance novel phrasing queries\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 39 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 40 |\u001b[39m       expect(result\u001b[33m.\u001b[39mendpoint)\u001b[33m.\u001b[39mtoBe(\u001b[32m'/spatial-clusters'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 41 |\u001b[39m       expect(result\u001b[33m.\u001b[39msemantic_verification\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mused)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 43 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m`Novel Phrasing Test:`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 44 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m`  Query: \"${query}\"`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/semantic-enhanced-hybrid.test.ts\u001b[39m\u001b[0m\u001b[2m:41:50)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSemantic Enhanced Hybrid Routing Engine › Creative Query Enhancement › should handle compound queries with enhancement\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 53 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 54 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 55 |\u001b[39m       expect(result\u001b[33m.\u001b[39msemantic_verification\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mused)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 56 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 57 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m`Compound Query Test:`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 58 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m`  Query: \"${query}\"`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/semantic-enhanced-hybrid.test.ts\u001b[39m\u001b[0m\u001b[2m:55:50)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSemantic Enhanced Hybrid Routing Engine › Structured Query Handling › should handle structured queries without unnecessary semantic enhancement\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"/\u001b[7mdemographic-insights\u001b[27m\"\u001b[39m\n    Received: \u001b[31m\"/\u001b[7manalyze\u001b[27m\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 69 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 70 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 71 |\u001b[39m       expect(result\u001b[33m.\u001b[39mendpoint)\u001b[33m.\u001b[39mtoBe(\u001b[32m'/demographic-insights'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 72 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 73 |\u001b[39m       \u001b[90m// Structured queries with high confidence shouldn't need semantic enhancement\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 74 |\u001b[39m       \u001b[36mconst\u001b[39m semanticUsed \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39msemantic_verification\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mused \u001b[33m||\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/semantic-enhanced-hybrid.test.ts\u001b[39m\u001b[0m\u001b[2m:71:31)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/voldeck/code/mpiq-ai-chat/__tests__/semantic-enhanced-hybrid.test.ts","startTime":1756690387460,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Hybrid Query Processor"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Query Processor should process simple queries using rule-based approach","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should process simple queries using rule-based approach"},{"ancestorTitles":["Hybrid Query Processor"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Query Processor should process complex queries using ML-based approach","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should process complex queries using ML-based approach"},{"ancestorTitles":["Hybrid Query Processor"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Query Processor should always use ML for predictive queries","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should always use ML for predictive queries"},{"ancestorTitles":["Hybrid Query Processor"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Query Processor should fall back to rule-based processing if ML service fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fall back to rule-based processing if ML service fails"},{"ancestorTitles":["Hybrid Query Processor"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Query Processor should respect feature flag to disable ML","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should respect feature flag to disable ML"}],"endTime":1756690388297,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/__tests__/lib/hybrid-query-processor.test.ts","startTime":1756690388214,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🔍 Open-Ended Business Queries"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🔍 Open-Ended Business Queries should handle open-ended business query effectively: \"What patterns emerge when analyzing customer behavior across different regions?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle open-ended business query effectively: \"What patterns emerge when analyzing customer behavior across different regions?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🔍 Open-Ended Business Queries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🔍 Open-Ended Business Queries should handle open-ended business query effectively: \"How do our top performing areas differ from underperforming ones?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle open-ended business query effectively: \"How do our top performing areas differ from underperforming ones?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🔍 Open-Ended Business Queries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🔍 Open-Ended Business Queries should handle open-ended business query effectively: \"I want to understand market dynamics in emerging territories\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle open-ended business query effectively: \"I want to understand market dynamics in emerging territories\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🔍 Open-Ended Business Queries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🔍 Open-Ended Business Queries should handle open-ended business query effectively: \"Can you break down the key factors that drive usage in different segments?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle open-ended business query effectively: \"Can you break down the key factors that drive usage in different segments?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🔍 Open-Ended Business Queries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🔍 Open-Ended Business Queries should handle open-ended business query effectively: \"Show me which characteristics are most predictive of high performance\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle open-ended business query effectively: \"Show me which characteristics are most predictive of high performance\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🔍 Open-Ended Business Queries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🔍 Open-Ended Business Queries should handle open-ended business query effectively: \"What would happen if we expanded into similar but untapped markets?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle open-ended business query effectively: \"What would happen if we expanded into similar but untapped markets?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🔍 Open-Ended Business Queries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🔍 Open-Ended Business Queries should handle open-ended business query effectively: \"Help me identify clusters of similar performing locations\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle open-ended business query effectively: \"Help me identify clusters of similar performing locations\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🔍 Open-Ended Business Queries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🔍 Open-Ended Business Queries should handle open-ended business query effectively: \"Which areas show the most potential for growth?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle open-ended business query effectively: \"Which areas show the most potential for growth?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🔍 Open-Ended Business Queries"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🔍 Open-Ended Business Queries should handle open-ended business query effectively: \"What are the distinguishing features of our best customers?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle open-ended business query effectively: \"What are the distinguishing features of our best customers?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🔍 Open-Ended Business Queries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🔍 Open-Ended Business Queries should handle open-ended business query effectively: \"How do seasonal trends affect different market segments?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle open-ended business query effectively: \"How do seasonal trends affect different market segments?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","❓ Edge Cases & Ambiguous Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization ❓ Edge Cases & Ambiguous Queries should handle edge case gracefully: \"analyze\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle edge case gracefully: \"analyze\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","❓ Edge Cases & Ambiguous Queries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization ❓ Edge Cases & Ambiguous Queries should handle edge case gracefully: \"What's the best?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle edge case gracefully: \"What's the best?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","❓ Edge Cases & Ambiguous Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization ❓ Edge Cases & Ambiguous Queries should handle edge case gracefully: \"Can you help me with some analysis stuff?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle edge case gracefully: \"Can you help me with some analysis stuff?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","❓ Edge Cases & Ambiguous Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization ❓ Edge Cases & Ambiguous Queries should handle edge case gracefully: \"I need insights about things\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle edge case gracefully: \"I need insights about things\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","❓ Edge Cases & Ambiguous Queries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization ❓ Edge Cases & Ambiguous Queries should handle edge case gracefully: \"Data analysis please\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle edge case gracefully: \"Data analysis please\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","❓ Edge Cases & Ambiguous Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization ❓ Edge Cases & Ambiguous Queries should handle edge case gracefully: \"Show me something interesting\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle edge case gracefully: \"Show me something interesting\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","❓ Edge Cases & Ambiguous Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization ❓ Edge Cases & Ambiguous Queries should handle edge case gracefully: \"What can you tell me?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle edge case gracefully: \"What can you tell me?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","❓ Edge Cases & Ambiguous Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization ❓ Edge Cases & Ambiguous Queries should handle edge case gracefully: \"Help\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle edge case gracefully: \"Help\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","❓ Edge Cases & Ambiguous Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization ❓ Edge Cases & Ambiguous Queries should handle edge case gracefully: \"Analysis\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle edge case gracefully: \"Analysis\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","❓ Edge Cases & Ambiguous Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization ❓ Edge Cases & Ambiguous Queries should handle edge case gracefully: \"Give me information\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle edge case gracefully: \"Give me information\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🚫 Out-of-Scope Queries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🚫 Out-of-Scope Queries should properly reject out-of-scope query: \"What's the weather forecast for tomorrow?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should properly reject out-of-scope query: \"What's the weather forecast for tomorrow?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🚫 Out-of-Scope Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🚫 Out-of-Scope Queries should properly reject out-of-scope query: \"How do I make chocolate chip cookies?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should properly reject out-of-scope query: \"How do I make chocolate chip cookies?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🚫 Out-of-Scope Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🚫 Out-of-Scope Queries should properly reject out-of-scope query: \"What's the capital of France?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should properly reject out-of-scope query: \"What's the capital of France?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🚫 Out-of-Scope Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🚫 Out-of-Scope Queries should properly reject out-of-scope query: \"Can you help me debug my Python code?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should properly reject out-of-scope query: \"Can you help me debug my Python code?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🚫 Out-of-Scope Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🚫 Out-of-Scope Queries should properly reject out-of-scope query: \"Tell me a joke\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should properly reject out-of-scope query: \"Tell me a joke\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🚫 Out-of-Scope Queries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🚫 Out-of-Scope Queries should properly reject out-of-scope query: \"What's the stock price of Apple?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should properly reject out-of-scope query: \"What's the stock price of Apple?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🚫 Out-of-Scope Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🚫 Out-of-Scope Queries should properly reject out-of-scope query: \"How do I fix my car?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should properly reject out-of-scope query: \"How do I fix my car?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🚫 Out-of-Scope Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🚫 Out-of-Scope Queries should properly reject out-of-scope query: \"What time is it?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should properly reject out-of-scope query: \"What time is it?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🚫 Out-of-Scope Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🚫 Out-of-Scope Queries should properly reject out-of-scope query: \"Write me a poem\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should properly reject out-of-scope query: \"Write me a poem\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🚫 Out-of-Scope Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🚫 Out-of-Scope Queries should properly reject out-of-scope query: \"How do I lose weight?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should properly reject out-of-scope query: \"How do I lose weight?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🚫 Out-of-Scope Queries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🚫 Out-of-Scope Queries should properly reject out-of-scope query: \"What's on TV tonight?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should properly reject out-of-scope query: \"What's on TV tonight?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🚫 Out-of-Scope Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🚫 Out-of-Scope Queries should properly reject out-of-scope query: \"Can you book me a flight?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should properly reject out-of-scope query: \"Can you book me a flight?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🔗 Compound Queries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🔗 Compound Queries should handle compound query flexibly: \"Compare the demographics between high and low performing regions, and also show me any geographic clusters\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle compound query flexibly: \"Compare the demographics between high and low performing regions, and also show me any geographic clusters\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🔗 Compound Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🔗 Compound Queries should handle compound query flexibly: \"I want to see competitive analysis but also understand customer segments and maybe some strategic insights\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle compound query flexibly: \"I want to see competitive analysis but also understand customer segments and maybe some strategic insights\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🔗 Compound Queries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🔗 Compound Queries should handle compound query flexibly: \"Can you do a comparative analysis of market penetration and also identify outliers in the data?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle compound query flexibly: \"Can you do a comparative analysis of market penetration and also identify outliers in the data?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🔗 Compound Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🔗 Compound Queries should handle compound query flexibly: \"Show me both the demographic breakdown and competitive positioning for our top markets\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle compound query flexibly: \"Show me both the demographic breakdown and competitive positioning for our top markets\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🔗 Compound Queries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🔗 Compound Queries should handle compound query flexibly: \"I need strategic analysis combined with performance rankings and maybe some trend analysis\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle compound query flexibly: \"I need strategic analysis combined with performance rankings and maybe some trend analysis\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🎨 Novel Phrasing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🎨 Novel Phrasing should understand creative business phrasing: \"What story does our customer data tell about regional differences?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should understand creative business phrasing: \"What story does our customer data tell about regional differences?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🎨 Novel Phrasing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🎨 Novel Phrasing should understand creative business phrasing: \"If our data could talk, what would it say about market opportunities?\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should understand creative business phrasing: \"If our data could talk, what would it say about market opportunities?\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🎨 Novel Phrasing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🎨 Novel Phrasing should understand creative business phrasing: \"Paint me a picture of how different segments behave\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should understand creative business phrasing: \"Paint me a picture of how different segments behave\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🎨 Novel Phrasing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🎨 Novel Phrasing should understand creative business phrasing: \"Walk me through the landscape of our competitive position\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should understand creative business phrasing: \"Walk me through the landscape of our competitive position\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🎨 Novel Phrasing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🎨 Novel Phrasing should understand creative business phrasing: \"Dissect the anatomy of our high-performing markets\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should understand creative business phrasing: \"Dissect the anatomy of our high-performing markets\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🎨 Novel Phrasing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🎨 Novel Phrasing should understand creative business phrasing: \"Unpack the dynamics driving customer behavior\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should understand creative business phrasing: \"Unpack the dynamics driving customer behavior\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🎨 Novel Phrasing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🎨 Novel Phrasing should understand creative business phrasing: \"Decode the patterns in our performance data\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should understand creative business phrasing: \"Decode the patterns in our performance data\""},{"ancestorTitles":["🎯 Hybrid Routing Random Query Optimization","🎨 Novel Phrasing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"🎯 Hybrid Routing Random Query Optimization 🎨 Novel Phrasing should understand creative business phrasing: \"Illuminate the factors behind market success\"","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should understand creative business phrasing: \"Illuminate the factors behind market success\""}],"endTime":1756690388301,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/__tests__/hybrid-routing-random-query-optimization.test.ts","startTime":1756690388218,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["API route POST scope behavior (integration)"],"duration":67,"failureDetails":[],"failureMessages":[],"fullName":"API route POST scope behavior (integration) enforces selection-scoped study area when spatialFilterIds provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"enforces selection-scoped study area when spatialFilterIds provided"},{"ancestorTitles":["API route POST scope behavior (integration)"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"API route POST scope behavior (integration) bypasses selection when analysisScope=project","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"bypasses selection when analysisScope=project"}],"endTime":1756690388347,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/postprocess/__tests__/route.scope.integration.test.ts","startTime":1756690388189,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Hybrid Routing System Detailed Analysis"],"duration":26,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Routing System Detailed Analysis should perform comprehensive routing analysis with detailed failure tracking","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should perform comprehensive routing analysis with detailed failure tracking"}],"endTime":1756690388376,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/__tests__/hybrid-routing-detailed.test.ts","startTime":1756690388315,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E: AnalyzeProcessor"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"E2E: AnalyzeProcessor produces targetVariable and renderer aligned and mirrors dynamic field on records","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"produces targetVariable and renderer aligned and mirrors dynamic field on records"},{"ancestorTitles":["E2E: AnalyzeProcessor"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"E2E: AnalyzeProcessor throws when no numeric scoring field can be detected","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"throws when no numeric scoring field can be detected"}],"endTime":1756690388383,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/__tests__/AnalyzeProcessor.e2e.test.ts","startTime":1756690388335,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Layer 0: Query Validation Framework"],"duration":12,"failureDetails":[{"matcherResult":{"actual":true,"expected":false,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/hybrid-routing-comprehensive.test.ts:274:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Hybrid Routing System Comprehensive Test Suite Layer 0: Query Validation Framework should properly reject out-of-scope queries","invocations":1,"location":null,"numPassingAsserts":35,"retryReasons":[],"status":"failed","title":"should properly reject out-of-scope queries"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Layer 0: Query Validation Framework"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Routing System Comprehensive Test Suite Layer 0: Query Validation Framework should handle malformed queries appropriately","invocations":1,"location":null,"numPassingAsserts":24,"retryReasons":[],"status":"passed","title":"should handle malformed queries appropriately"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Layer 0: Query Validation Framework"],"duration":0,"failureDetails":[{"matcherResult":{"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/hybrid-routing-comprehensive.test.ts:324:36)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Hybrid Routing System Comprehensive Test Suite Layer 0: Query Validation Framework should identify borderline queries needing clarification","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should identify borderline queries needing clarification"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Layer 1: Base Intent Classification"],"duration":2,"failureDetails":[{"matcherResult":{"actual":"difference_analysis","expected":"demographic_analysis","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"d\u001b[7memographic\u001b[27m_analysis\"\u001b[39m\nReceived: \u001b[31m\"d\u001b[7mifference\u001b[27m_analysis\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"d\u001b[7memographic\u001b[27m_analysis\"\u001b[39m\nReceived: \u001b[31m\"d\u001b[7mifference\u001b[27m_analysis\"\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/hybrid-routing-comprehensive.test.ts:343:68)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Hybrid Routing System Comprehensive Test Suite Layer 1: Base Intent Classification should classify demographic analysis intents correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should classify demographic analysis intents correctly"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Layer 1: Base Intent Classification"],"duration":1,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0.4\u001b[39m\nReceived:   \u001b[31m0.182\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0.4\u001b[39m\nReceived:   \u001b[31m0.182\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/hybrid-routing-comprehensive.test.ts:363:64)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Hybrid Routing System Comprehensive Test Suite Layer 1: Base Intent Classification should classify competitive analysis intents correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should classify competitive analysis intents correctly"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Layer 1: Base Intent Classification"],"duration":1,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0.4\u001b[39m\nReceived:   \u001b[31m0.13799999999999998\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0.4\u001b[39m\nReceived:   \u001b[31m0.13799999999999998\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/hybrid-routing-comprehensive.test.ts:382:64)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Hybrid Routing System Comprehensive Test Suite Layer 1: Base Intent Classification should classify strategic analysis intents correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should classify strategic analysis intents correctly"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Layer 1: Base Intent Classification"],"duration":2,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/hybrid-routing-comprehensive.test.ts:398:78)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Hybrid Routing System Comprehensive Test Suite Layer 1: Base Intent Classification should handle multi-intent queries with secondary intents","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle multi-intent queries with secondary intents"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Layer 2: Domain Vocabulary Adaptation"],"duration":1,"failureDetails":[{}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must be a number or bigint\n\nReceived has value: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/hybrid-routing-comprehensive.test.ts:416:77)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Hybrid Routing System Comprehensive Test Suite Layer 2: Domain Vocabulary Adaptation should expand synonyms and map entities correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should expand synonyms and map entities correctly"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Layer 2: Domain Vocabulary Adaptation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Routing System Comprehensive Test Suite Layer 2: Domain Vocabulary Adaptation should apply boost and penalty terms correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should apply boost and penalty terms correctly"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Layer 2: Domain Vocabulary Adaptation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Routing System Comprehensive Test Suite Layer 2: Domain Vocabulary Adaptation should avoid cross-contamination between similar endpoints","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should avoid cross-contamination between similar endpoints"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Layer 3: Context Enhancement Engine"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Routing System Comprehensive Test Suite Layer 3: Context Enhancement Engine should discover and categorize fields dynamically","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should discover and categorize fields dynamically"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Layer 3: Context Enhancement Engine"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Routing System Comprehensive Test Suite Layer 3: Context Enhancement Engine should boost confidence based on field availability","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should boost confidence based on field availability"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Layer 3: Context Enhancement Engine"],"duration":5,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/hybrid-routing-comprehensive.test.ts:540:64)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Hybrid Routing System Comprehensive Test Suite Layer 3: Context Enhancement Engine should work with any dataset structure (dataset agnostic)","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should work with any dataset structure (dataset agnostic)"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Layer 4: Confidence Management"],"duration":1,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m\"reject\"\u001b[39m\nReceived array: \u001b[31m[\"clarify\", \"fallback\"]\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m\"reject\"\u001b[39m\nReceived array: \u001b[31m[\"clarify\", \"fallback\"]\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/hybrid-routing-comprehensive.test.ts:558:55)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Hybrid Routing System Comprehensive Test Suite Layer 4: Confidence Management should make appropriate routing decisions based on confidence","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should make appropriate routing decisions based on confidence"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Layer 4: Confidence Management"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Routing System Comprehensive Test Suite Layer 4: Confidence Management should provide alternatives for medium confidence queries","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should provide alternatives for medium confidence queries"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Layer 4: Confidence Management"],"duration":2,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThanOrEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: <= \u001b[32m1\u001b[39m\nReceived:    \u001b[31m1.16\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThanOrEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: <= \u001b[32m1\u001b[39m\nReceived:    \u001b[31m1.16\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/hybrid-routing-comprehensive.test.ts:591:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Hybrid Routing System Comprehensive Test Suite Layer 4: Confidence Management should adapt thresholds based on usage feedback","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should adapt thresholds based on usage feedback"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Performance and Integration Tests"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Routing System Comprehensive Test Suite Performance and Integration Tests should complete routing in under 15ms average","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should complete routing in under 15ms average"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Performance and Integration Tests"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Routing System Comprehensive Test Suite Performance and Integration Tests should execute all 5 layers for complex queries","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should execute all 5 layers for complex queries"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Performance and Integration Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Routing System Comprehensive Test Suite Performance and Integration Tests should provide complete reasoning chains","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should provide complete reasoning chains"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Performance and Integration Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Routing System Comprehensive Test Suite Performance and Integration Tests should handle high-volume concurrent requests","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle high-volume concurrent requests"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Cross-Domain Portability Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Routing System Comprehensive Test Suite Cross-Domain Portability Tests should work with healthcare domain configuration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should work with healthcare domain configuration"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Cross-Domain Portability Tests"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Routing System Comprehensive Test Suite Cross-Domain Portability Tests should handle retail domain queries","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle retail domain queries"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Comprehensive ANALYSIS_CATEGORIES Integration"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Routing System Comprehensive Test Suite Comprehensive ANALYSIS_CATEGORIES Integration should handle all categories from chat-constants with hybrid routing","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle all categories from chat-constants with hybrid routing"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Built-in Test Suite Integration"],"duration":13,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0.8\u001b[39m\nReceived:   \u001b[31m0.34615384615384615\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0.8\u001b[39m\nReceived:   \u001b[31m0.34615384615384615\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/hybrid-routing-comprehensive.test.ts:851:48)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Hybrid Routing System Comprehensive Test Suite Built-in Test Suite Integration should run the built-in hybrid routing test suite","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should run the built-in hybrid routing test suite"},{"ancestorTitles":["Hybrid Routing System Comprehensive Test Suite","Built-in Test Suite Integration"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"Hybrid Routing System Comprehensive Test Suite Built-in Test Suite Integration should run performance benchmark","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should run performance benchmark"}],"endTime":1756690388386,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHybrid Routing System Comprehensive Test Suite › Layer 0: Query Validation Framework › should properly reject out-of-scope queries\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 272 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 273 |\u001b[39m         \u001b[90m// Should be rejected\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 274 |\u001b[39m         expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 275 |\u001b[39m         expect(result\u001b[33m.\u001b[39mvalidation\u001b[33m.\u001b[39mscope)\u001b[33m.\u001b[39mtoBe(\u001b[32m'out_of_scope'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 276 |\u001b[39m         expect(result\u001b[33m.\u001b[39muser_response\u001b[33m.\u001b[39mtype)\u001b[33m.\u001b[39mtoBe(\u001b[32m'rejection'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 277 |\u001b[39m         expect(result\u001b[33m.\u001b[39muser_response\u001b[33m.\u001b[39msuggestions)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/hybrid-routing-comprehensive.test.ts\u001b[39m\u001b[0m\u001b[2m:274:32)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHybrid Routing System Comprehensive Test Suite › Layer 0: Query Validation Framework › should identify borderline queries needing clarification\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 322 |\u001b[39m                                  (result\u001b[33m.\u001b[39mconfidence \u001b[33m&&\u001b[39m result\u001b[33m.\u001b[39mconfidence \u001b[33m<\u001b[39m \u001b[35m0.5\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 323 |\u001b[39m         \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 324 |\u001b[39m         expect(needsClarification)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 325 |\u001b[39m       }\u001b[22m\n\u001b[2m     \u001b[90m 326 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 327 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/hybrid-routing-comprehensive.test.ts\u001b[39m\u001b[0m\u001b[2m:324:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHybrid Routing System Comprehensive Test Suite › Layer 1: Base Intent Classification › should classify demographic analysis intents correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"d\u001b[7memographic\u001b[27m_analysis\"\u001b[39m\n    Received: \u001b[31m\"d\u001b[7mifference\u001b[27m_analysis\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 341 |\u001b[39m         \u001b[22m\n\u001b[2m     \u001b[90m 342 |\u001b[39m         \u001b[36mif\u001b[39m (result\u001b[33m.\u001b[39msuccess) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 343 |\u001b[39m           expect(result\u001b[33m.\u001b[39mrouting_layers\u001b[33m.\u001b[39mbase_intent\u001b[33m.\u001b[39mprimary_intent)\u001b[33m.\u001b[39mtoBe(\u001b[32m'demographic_analysis'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 344 |\u001b[39m           expect(result\u001b[33m.\u001b[39mrouting_layers\u001b[33m.\u001b[39mbase_intent\u001b[33m.\u001b[39mconfidence)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0.4\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 345 |\u001b[39m         }\u001b[22m\n\u001b[2m     \u001b[90m 346 |\u001b[39m       }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/hybrid-routing-comprehensive.test.ts\u001b[39m\u001b[0m\u001b[2m:343:68)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHybrid Routing System Comprehensive Test Suite › Layer 1: Base Intent Classification › should classify competitive analysis intents correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0.4\u001b[39m\n    Received:   \u001b[31m0.182\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 361 |\u001b[39m         \u001b[36mif\u001b[39m (result\u001b[33m.\u001b[39msuccess) {\u001b[22m\n\u001b[2m     \u001b[90m 362 |\u001b[39m           expect(result\u001b[33m.\u001b[39mrouting_layers\u001b[33m.\u001b[39mbase_intent\u001b[33m.\u001b[39mprimary_intent)\u001b[33m.\u001b[39mtoBe(\u001b[32m'competitive_analysis'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 363 |\u001b[39m           expect(result\u001b[33m.\u001b[39mrouting_layers\u001b[33m.\u001b[39mbase_intent\u001b[33m.\u001b[39mconfidence)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0.4\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 364 |\u001b[39m         }\u001b[22m\n\u001b[2m     \u001b[90m 365 |\u001b[39m       }\u001b[22m\n\u001b[2m     \u001b[90m 366 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/hybrid-routing-comprehensive.test.ts\u001b[39m\u001b[0m\u001b[2m:363:64)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHybrid Routing System Comprehensive Test Suite › Layer 1: Base Intent Classification › should classify strategic analysis intents correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0.4\u001b[39m\n    Received:   \u001b[31m0.13799999999999998\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 380 |\u001b[39m         \u001b[36mif\u001b[39m (result\u001b[33m.\u001b[39msuccess) {\u001b[22m\n\u001b[2m     \u001b[90m 381 |\u001b[39m           expect(result\u001b[33m.\u001b[39mrouting_layers\u001b[33m.\u001b[39mbase_intent\u001b[33m.\u001b[39mprimary_intent)\u001b[33m.\u001b[39mtoBe(\u001b[32m'strategic_analysis'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 382 |\u001b[39m           expect(result\u001b[33m.\u001b[39mrouting_layers\u001b[33m.\u001b[39mbase_intent\u001b[33m.\u001b[39mconfidence)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0.4\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 383 |\u001b[39m         }\u001b[22m\n\u001b[2m     \u001b[90m 384 |\u001b[39m       }\u001b[22m\n\u001b[2m     \u001b[90m 385 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/hybrid-routing-comprehensive.test.ts\u001b[39m\u001b[0m\u001b[2m:382:64)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHybrid Routing System Comprehensive Test Suite › Layer 1: Base Intent Classification › should handle multi-intent queries with secondary intents\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0\u001b[39m\n    Received:   \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 396 |\u001b[39m         \u001b[22m\n\u001b[2m     \u001b[90m 397 |\u001b[39m         \u001b[36mif\u001b[39m (result\u001b[33m.\u001b[39msuccess \u001b[33m&&\u001b[39m result\u001b[33m.\u001b[39mrouting_layers\u001b[33m.\u001b[39mbase_intent\u001b[33m.\u001b[39msecondary_intents) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 398 |\u001b[39m           expect(result\u001b[33m.\u001b[39mrouting_layers\u001b[33m.\u001b[39mbase_intent\u001b[33m.\u001b[39msecondary_intents\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 399 |\u001b[39m         }\u001b[22m\n\u001b[2m     \u001b[90m 400 |\u001b[39m       }\u001b[22m\n\u001b[2m     \u001b[90m 401 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/hybrid-routing-comprehensive.test.ts\u001b[39m\u001b[0m\u001b[2m:398:78)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHybrid Routing System Comprehensive Test Suite › Layer 2: Domain Vocabulary Adaptation › should expand synonyms and map entities correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must be a number or bigint\n\n    Received has value: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 414 |\u001b[39m         \u001b[22m\n\u001b[2m     \u001b[90m 415 |\u001b[39m         \u001b[36mif\u001b[39m (result\u001b[33m.\u001b[39msuccess \u001b[33m&&\u001b[39m result\u001b[33m.\u001b[39mrouting_layers\u001b[33m.\u001b[39mdomain_enhancement) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 416 |\u001b[39m           expect(result\u001b[33m.\u001b[39mrouting_layers\u001b[33m.\u001b[39mdomain_enhancement\u001b[33m.\u001b[39mdomain_relevance)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 417 |\u001b[39m           expect(result\u001b[33m.\u001b[39mrouting_layers\u001b[33m.\u001b[39mdomain_enhancement\u001b[33m.\u001b[39menhanced_query)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 418 |\u001b[39m         }\u001b[22m\n\u001b[2m     \u001b[90m 419 |\u001b[39m       }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/hybrid-routing-comprehensive.test.ts\u001b[39m\u001b[0m\u001b[2m:416:77)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHybrid Routing System Comprehensive Test Suite › Layer 3: Context Enhancement Engine › should work with any dataset structure (dataset agnostic)\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 538 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 539 |\u001b[39m       \u001b[90m// Both should work without hardcoded assumptions\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 540 |\u001b[39m       expect(healthcareResult\u001b[33m.\u001b[39msuccess \u001b[33m||\u001b[39m retailResult\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 541 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 542 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 543 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/hybrid-routing-comprehensive.test.ts\u001b[39m\u001b[0m\u001b[2m:540:64)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHybrid Routing System Comprehensive Test Suite › Layer 4: Confidence Management › should make appropriate routing decisions based on confidence\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected value: \u001b[32m\"reject\"\u001b[39m\n    Received array: \u001b[31m[\"clarify\", \"fallback\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 556 |\u001b[39m                            result\u001b[33m.\u001b[39muser_response\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'clarification'\u001b[39m \u001b[33m?\u001b[39m \u001b[32m'clarify'\u001b[39m \u001b[33m:\u001b[39m \u001b[32m'reject'\u001b[39m\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 557 |\u001b[39m         \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 558 |\u001b[39m         expect([testCase\u001b[33m.\u001b[39mexpectedAction\u001b[33m,\u001b[39m \u001b[32m'fallback'\u001b[39m])\u001b[33m.\u001b[39mtoContain(actualAction)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 559 |\u001b[39m       }\u001b[22m\n\u001b[2m     \u001b[90m 560 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 561 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/hybrid-routing-comprehensive.test.ts\u001b[39m\u001b[0m\u001b[2m:558:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHybrid Routing System Comprehensive Test Suite › Layer 4: Confidence Management › should adapt thresholds based on usage feedback\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThanOrEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: <= \u001b[32m1\u001b[39m\n    Received:    \u001b[31m1.16\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 589 |\u001b[39m         \u001b[36mif\u001b[39m (result\u001b[33m.\u001b[39msuccess \u001b[33m&&\u001b[39m result\u001b[33m.\u001b[39mconfidence) {\u001b[22m\n\u001b[2m     \u001b[90m 590 |\u001b[39m           expect(result\u001b[33m.\u001b[39mconfidence)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0.3\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 591 |\u001b[39m           expect(result\u001b[33m.\u001b[39mconfidence)\u001b[33m.\u001b[39mtoBeLessThanOrEqual(\u001b[35m1.0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 592 |\u001b[39m         }\u001b[22m\n\u001b[2m     \u001b[90m 593 |\u001b[39m       }\u001b[22m\n\u001b[2m     \u001b[90m 594 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/hybrid-routing-comprehensive.test.ts\u001b[39m\u001b[0m\u001b[2m:591:37)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHybrid Routing System Comprehensive Test Suite › Built-in Test Suite Integration › should run the built-in hybrid routing test suite\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0.8\u001b[39m\n    Received:   \u001b[31m0.34615384615384615\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 849 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 850 |\u001b[39m       \u001b[90m// Validate results meet targets\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 851 |\u001b[39m       expect(testSuiteResult\u001b[33m.\u001b[39moverall_accuracy)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0.8\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// >80% overall\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 852 |\u001b[39m       expect(testSuiteResult\u001b[33m.\u001b[39min_scope_accuracy)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0.85\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// >85% in-scope\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 853 |\u001b[39m       expect(testSuiteResult\u001b[33m.\u001b[39mout_of_scope_rejection_rate)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0.9\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// >90% rejection\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 854 |\u001b[39m       expect(testSuiteResult\u001b[33m.\u001b[39mperformance_metrics\u001b[33m.\u001b[39mavg_processing_time)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m15\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// <15ms avg\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/hybrid-routing-comprehensive.test.ts\u001b[39m\u001b[0m\u001b[2m:851:48)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/voldeck/code/mpiq-ai-chat/__tests__/hybrid-routing-comprehensive.test.ts","startTime":1756690387406,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Dynamic field detection and alignment (last numeric wins)"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"Dynamic field detection and alignment (last numeric wins) AnalyzeProcessor: uses last numeric field and aligns renderer/targetVariable","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"AnalyzeProcessor: uses last numeric field and aligns renderer/targetVariable"},{"ancestorTitles":["Dynamic field detection and alignment (last numeric wins)"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Dynamic field detection and alignment (last numeric wins) CorrelationAnalysisProcessor: mirrors dynamic field while computing value","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"CorrelationAnalysisProcessor: mirrors dynamic field while computing value"},{"ancestorTitles":["Dynamic field detection and alignment (last numeric wins)"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Dynamic field detection and alignment (last numeric wins) ConsensusAnalysisProcessor: mirrors dynamic field and aligns renderer/targetVariable","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"ConsensusAnalysisProcessor: mirrors dynamic field and aligns renderer/targetVariable"},{"ancestorTitles":["Dynamic field detection and alignment (last numeric wins)"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Dynamic field detection and alignment (last numeric wins) OutlierDetectionProcessor: mirrors dynamic field and aligns renderer/targetVariable","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"OutlierDetectionProcessor: mirrors dynamic field and aligns renderer/targetVariable"},{"ancestorTitles":["Dynamic field detection and alignment (last numeric wins)"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Dynamic field detection and alignment (last numeric wins) TrendAnalysisProcessor: mirrors dynamic field and aligns renderer/targetVariable","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"TrendAnalysisProcessor: mirrors dynamic field and aligns renderer/targetVariable"},{"ancestorTitles":["Dynamic field detection and alignment (last numeric wins)"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"Dynamic field detection and alignment (last numeric wins) EnsembleAnalysisProcessor: uses dynamic field value directly and aligns renderer/targetVariable","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"EnsembleAnalysisProcessor: uses dynamic field value directly and aligns renderer/targetVariable"},{"ancestorTitles":["Dynamic field detection and alignment (last numeric wins)"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Dynamic field detection and alignment (last numeric wins) AnalyzeProcessor: throws when no numeric fields are present","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"AnalyzeProcessor: throws when no numeric fields are present"}],"endTime":1756690388423,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/__tests__/DynamicFieldAlignment.e2e.test.ts","startTime":1756690388326,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["StrategicAnalysisProcessor area naming"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"StrategicAnalysisProcessor area naming uses DESCRIPTION city name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"uses DESCRIPTION city name"},{"ancestorTitles":["StrategicAnalysisProcessor area naming"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"StrategicAnalysisProcessor area naming falls back to ZIP when no description/city","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"falls back to ZIP when no description/city"}],"endTime":1756690388422,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/__tests__/StrategicAnalysisProcessor.name.test.ts","startTime":1756690388374,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ChatStateManager","Session Management"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ChatStateManager Session Management should create a new session with default values","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create a new session with default values"},{"ancestorTitles":["ChatStateManager","Session Management"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ChatStateManager Session Management should create a session with custom preferences","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create a session with custom preferences"},{"ancestorTitles":["ChatStateManager","Session Management"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"ChatStateManager Session Management should throw error when accessing non-existent session","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error when accessing non-existent session"},{"ancestorTitles":["ChatStateManager","Message Management"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ChatStateManager Message Management should add messages to history","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should add messages to history"},{"ancestorTitles":["ChatStateManager","Message Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ChatStateManager Message Management should add messages with metadata","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should add messages with metadata"},{"ancestorTitles":["ChatStateManager","Clarification Questions"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"ChatStateManager Clarification Questions should add and retrieve clarification questions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should add and retrieve clarification questions"},{"ancestorTitles":["ChatStateManager","Clarification Questions"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ChatStateManager Clarification Questions should remove clarification questions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove clarification questions"},{"ancestorTitles":["ChatStateManager","Data Context"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ChatStateManager Data Context should update data context","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should update data context"},{"ancestorTitles":["ChatStateManager","User Preferences"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ChatStateManager User Preferences should update user preferences","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should update user preferences"}],"endTime":1756690388437,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/chat-state-manager.test.ts","startTime":1756690388350,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E: StrategicAnalysisProcessor"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"E2E: StrategicAnalysisProcessor produces targetVariable and renderer aligned to strategic_analysis_score and sorts descending","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"produces targetVariable and renderer aligned to strategic_analysis_score and sorts descending"}],"endTime":1756690388450,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/__tests__/StrategicAnalysis.e2e.test.ts","startTime":1756690388400,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E: ComparativeAnalysisProcessor"],"duration":23,"failureDetails":[],"failureMessages":[],"fullName":"E2E: ComparativeAnalysisProcessor emits comparison_score as targetVariable and sorts descending","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"emits comparison_score as targetVariable and sorts descending"}],"endTime":1756690388441,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/__tests__/ComparativeAnalysis.e2e.test.ts","startTime":1756690388391,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E: DemographicDataProcessor"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"E2E: DemographicDataProcessor emits demographic_insights_score as targetVariable and sorts descending","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"emits demographic_insights_score as targetVariable and sorts descending"}],"endTime":1756690388457,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/__tests__/DemographicAnalysis.e2e.test.ts","startTime":1756690388418,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AI Persona System - Integration Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AI Persona System - Integration Tests should load persona \"strategist\" with all required fields","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should load persona \"strategist\" with all required fields"},{"ancestorTitles":["AI Persona System - Integration Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AI Persona System - Integration Tests should load persona \"tactician\" with all required fields","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should load persona \"tactician\" with all required fields"},{"ancestorTitles":["AI Persona System - Integration Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AI Persona System - Integration Tests should load persona \"creative\" with all required fields","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should load persona \"creative\" with all required fields"},{"ancestorTitles":["AI Persona System - Integration Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AI Persona System - Integration Tests should load persona \"product-specialist\" with all required fields","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should load persona \"product-specialist\" with all required fields"},{"ancestorTitles":["AI Persona System - Integration Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AI Persona System - Integration Tests should load persona \"customer-advocate\" with all required fields","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should load persona \"customer-advocate\" with all required fields"},{"ancestorTitles":["AI Persona System - Integration Tests"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"AI Persona System - Integration Tests should fallback to default persona when invalid id provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should fallback to default persona when invalid id provided"}],"endTime":1756690388478,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/__tests__/ai-personas.integration.test.ts","startTime":1756690388444,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["injectTopStrategicMarkets"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"injectTopStrategicMarkets injects ranked list capped at 10 and includes Study Area Summary","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"injects ranked list capped at 10 and includes Study Area Summary"},{"ancestorTitles":["injectTopStrategicMarkets"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"injectTopStrategicMarkets respects spatialFilterIds by limiting candidates","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"respects spatialFilterIds by limiting candidates"},{"ancestorTitles":["injectTopStrategicMarkets"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"injectTopStrategicMarkets bypasses spatialFilterIds when analysisScope=project to rank across full dataset","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"bypasses spatialFilterIds when analysisScope=project to rank across full dataset"},{"ancestorTitles":["injectTopStrategicMarkets"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"injectTopStrategicMarkets no-op when header missing","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"no-op when header missing"}],"endTime":1756690388482,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/postprocess/__tests__/topStrategicMarkets.test.ts","startTime":1756690388464,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E: CompetitiveDataProcessor"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"E2E: CompetitiveDataProcessor emits competitive_analysis_score as targetVariable and sorts descending","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"emits competitive_analysis_score as targetVariable and sorts descending"}],"endTime":1756690388494,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/__tests__/CompetitiveAnalysis.e2e.test.ts","startTime":1756690388465,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Chat Context Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Chat Context Integration should send proper context data on initial chat message","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should send proper context data on initial chat message"},{"ancestorTitles":["Chat Context Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Chat Context Integration should send context data on follow-up chat messages","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should send context data on follow-up chat messages"},{"ancestorTitles":["Chat Context Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Chat Context Integration should not trigger new analysis for follow-up questions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should not trigger new analysis for follow-up questions"},{"ancestorTitles":["Chat Context Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Chat Context Integration should preserve feature data across multiple chat exchanges","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"status":"passed","title":"should preserve feature data across multiple chat exchanges"},{"ancestorTitles":["Chat Context Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Chat Context Integration should include empty fallback data when no analysis exists","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include empty fallback data when no analysis exists"},{"ancestorTitles":["Chat Loading Messages"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Chat Loading Messages should return varied thinking messages","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"status":"passed","title":"should return varied thinking messages"},{"ancestorTitles":["Chat Loading Messages"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"Chat Loading Messages should never return \"Running full analysis\"","invocations":1,"location":null,"numPassingAsserts":300,"retryReasons":[],"status":"passed","title":"should never return \"Running full analysis\""},{"ancestorTitles":["Chat Loading Messages"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Chat Loading Messages should return only single word thinking verbs","invocations":1,"location":null,"numPassingAsserts":20,"retryReasons":[],"status":"passed","title":"should return only single word thinking verbs"}],"endTime":1756690388516,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/__tests__/chat-context-integration.test.ts","startTime":1756690388475,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E: TrendAnalysisProcessor"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"E2E: TrendAnalysisProcessor aligns renderer.field with targetVariable and mirrors dynamic field","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"aligns renderer.field with targetVariable and mirrors dynamic field"}],"endTime":1756690388524,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/__tests__/TrendAnalysisProcessor.e2e.test.ts","startTime":1756690388492,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E: CorrelationAnalysisProcessor"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"E2E: CorrelationAnalysisProcessor aligns renderer.field with targetVariable and mirrors dynamic field","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"aligns renderer.field with targetVariable and mirrors dynamic field"}],"endTime":1756690388531,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/__tests__/CorrelationAnalysisProcessor.e2e.test.ts","startTime":1756690388493,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E: EnsembleAnalysisProcessor"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"E2E: EnsembleAnalysisProcessor aligns renderer.field with targetVariable and mirrors dynamic field","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"aligns renderer.field with targetVariable and mirrors dynamic field"}],"endTime":1756690388530,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/__tests__/EnsembleAnalysisProcessor.e2e.test.ts","startTime":1756690388498,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E: ConsensusAnalysisProcessor"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"E2E: ConsensusAnalysisProcessor aligns renderer.field with targetVariable and mirrors dynamic field","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"aligns renderer.field with targetVariable and mirrors dynamic field"}],"endTime":1756690388547,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/__tests__/ConsensusAnalysisProcessor.e2e.test.ts","startTime":1756690388506,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E: OutlierDetectionProcessor"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"E2E: OutlierDetectionProcessor aligns renderer.field with targetVariable and mirrors dynamic field","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"aligns renderer.field with targetVariable and mirrors dynamic field"}],"endTime":1756690388540,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/__tests__/OutlierDetectionProcessor.e2e.test.ts","startTime":1756690388503,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["last numeric field detection (energy dataset convention)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"last numeric field detection (energy dataset convention) uses the last numeric field for ranking and stats when present","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"uses the last numeric field for ranking and stats when present"}],"endTime":1756690388563,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/postprocess/__tests__/lastNumericFieldDetection.test.ts","startTime":1756690388535,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AreaName utilities"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"AreaName utilities getZip extracts 5-digit ZIP from DESCRIPTION and pads 4-digit","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"getZip extracts 5-digit ZIP from DESCRIPTION and pads 4-digit"},{"ancestorTitles":["AreaName utilities"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AreaName utilities getZip supports direct fields and Canadian FSA","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"getZip supports direct fields and Canadian FSA"},{"ancestorTitles":["AreaName utilities"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AreaName utilities extractCityFromDescription parses parentheses","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"extractCityFromDescription parses parentheses"},{"ancestorTitles":["AreaName utilities"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AreaName utilities resolveAreaName full/cityOnly/zipCity modes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"resolveAreaName full/cityOnly/zipCity modes"},{"ancestorTitles":["AreaName utilities"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AreaName utilities resolveAreaName falls back to ZIP when no description","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"resolveAreaName falls back to ZIP when no description"},{"ancestorTitles":["AreaName utilities"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AreaName utilities resolveRegionName picks first valid name or neutral","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"resolveRegionName picks first valid name or neutral"}],"endTime":1756690388585,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/shared/AreaName.test.ts","startTime":1756690388550,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["sanitizeNarrativeScope"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"sanitizeNarrativeScope normalizes counts and overview to selection-scoped study area","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"normalizes counts and overview to selection-scoped study area"},{"ancestorTitles":["sanitizeNarrativeScope"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"sanitizeNarrativeScope bypasses spatialFilterIds when analysisScope=project for study-area metrics","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"bypasses spatialFilterIds when analysisScope=project for study-area metrics"},{"ancestorTitles":["sanitizeNarrativeScope"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"sanitizeNarrativeScope removes distribution and clustering sections irrespective of formatting","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"removes distribution and clustering sections irrespective of formatting"}],"endTime":1756690388585,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/postprocess/__tests__/scopeSanitizer.test.ts","startTime":1756690388524,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["spatialFilter utils"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"spatialFilter utils extractFeatureId: prefers explicit ID fields","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"extractFeatureId: prefers explicit ID fields"},{"ancestorTitles":["spatialFilter utils"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"spatialFilter utils extractFeatureId: falls back to DESCRIPTION/area_name ZIP parsing","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"extractFeatureId: falls back to DESCRIPTION/area_name ZIP parsing"},{"ancestorTitles":["spatialFilter utils"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"spatialFilter utils filterFeaturesBySpatialFilterIds: returns original when project scope","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"filterFeaturesBySpatialFilterIds: returns original when project scope"},{"ancestorTitles":["spatialFilter utils"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"spatialFilter utils filterFeaturesBySpatialFilterIds: filters by provided ids","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"filterFeaturesBySpatialFilterIds: filters by provided ids"}],"endTime":1756690388594,"message":"","name":"/Users/voldeck/code/mpiq-ai-chat/lib/analysis/utils/__tests__/spatialFilter.test.ts","startTime":1756690388563,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 1: Query Analysis (Semantic Router + Fallback)"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 1: Query Analysis (Semantic Router + Fallback) should route strategic queries using semantic understanding","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should route strategic queries using semantic understanding"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 1: Query Analysis (Semantic Router + Fallback)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 1: Query Analysis (Semantic Router + Fallback) should fallback to keyword analysis when semantic fails","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should fallback to keyword analysis when semantic fails"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 1: Query Analysis (Semantic Router + Fallback)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 1: Query Analysis (Semantic Router + Fallback) should detect geographic entities in queries","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should detect geographic entities in queries"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 2: Geographic Processing"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 2: Geographic Processing should parse geographic queries and extract entities","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should parse geographic queries and extract entities"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 2: Geographic Processing"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 2: Geographic Processing should map counties to ZIP codes (Phase 1)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should map counties to ZIP codes (Phase 1)"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 2: Geographic Processing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 2: Geographic Processing should handle city-level queries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle city-level queries"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 3: Configuration Management"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 3: Configuration Management should provide correct score config for endpoints","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should provide correct score config for endpoints"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 3: Configuration Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 3: Configuration Management should override processor targetVariable settings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should override processor targetVariable settings"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 4: Brand Name Resolution"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 4: Brand Name Resolution should detect brand fields dynamically","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should detect brand fields dynamically"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 4: Brand Name Resolution"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 4: Brand Name Resolution should calculate market gap correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate market gap correctly"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 4: Brand Name Resolution"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 4: Brand Name Resolution should extract target brand name for summaries","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should extract target brand name for summaries"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 5: Endpoint Routing"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 5: Endpoint Routing should select correct endpoint based on query analysis","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select correct endpoint based on query analysis"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 5: Endpoint Routing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 5: Endpoint Routing should route brand difference queries correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should route brand difference queries correctly"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 5: Endpoint Routing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 5: Endpoint Routing should use configuration manager for endpoint validation","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should use configuration manager for endpoint validation"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 6-7: API Call and Data Processing"],"duration":21,"failureDetails":[{"matcherResult":{"actual":"MP10104A_B_P","expected":"strategic_analysis_score","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"strategic_analysis_score\"\u001b[39m\nReceived: \u001b[31m\"MP10104A_B_P\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"strategic_analysis_score\"\u001b[39m\nReceived: \u001b[31m\"MP10104A_B_P\"\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/query-to-visualization-pipeline.test.ts:642:44)\n    at Promise.then.completed (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 6-7: API Call and Data Processing should process strategic analysis response correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"failed","title":"should process strategic analysis response correctly"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 6-7: API Call and Data Processing"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 6-7: API Call and Data Processing should apply ConfigurationManager field mapping authority","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply ConfigurationManager field mapping authority"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 6-7: API Call and Data Processing"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 6-7: API Call and Data Processing should process brand difference analysis with enrichment","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should process brand difference analysis with enrichment"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 6-7: API Call and Data Processing"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 6-7: API Call and Data Processing should include brand names in analysis summaries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include brand names in analysis summaries"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 7.5: Claude API Data Optimization (NEW 2025)"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 7.5: Claude API Data Optimization (NEW 2025) should optimize large datasets for Claude API","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should optimize large datasets for Claude API"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 7.5: Claude API Data Optimization (NEW 2025)"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 7.5: Claude API Data Optimization (NEW 2025) should preserve analytical accuracy in optimization","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should preserve analytical accuracy in optimization"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 8: Renderer Configuration"],"duration":18,"failureDetails":[{"matcherResult":{"actual":"MP10104A_B_P","expected":"strategic_analysis_score","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"strategic_analysis_score\"\u001b[39m\nReceived: \u001b[31m\"MP10104A_B_P\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"strategic_analysis_score\"\u001b[39m\nReceived: \u001b[31m\"MP10104A_B_P\"\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/query-to-visualization-pipeline.test.ts:746:44)\n    at Promise.then.completed (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 8: Renderer Configuration should generate correct renderer structure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should generate correct renderer structure"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 8: Renderer Configuration"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 8: Renderer Configuration should use standardized color scheme","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should use standardized color scheme"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 8: Renderer Configuration"],"duration":31,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 8: Renderer Configuration should apply standard opacity across all renderers","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should apply standard opacity across all renderers"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 8: Renderer Configuration"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 8: Renderer Configuration should match renderer field with record fields","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should match renderer field with record fields"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 9: ArcGIS Visualization Preparation"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 9: ArcGIS Visualization Preparation should prepare features for map visualization","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should prepare features for map visualization"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 9: ArcGIS Visualization Preparation"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 9: ArcGIS Visualization Preparation should create proper popup template structure","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create proper popup template structure"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Pipeline Step 9: ArcGIS Visualization Preparation"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Pipeline Step 9: ArcGIS Visualization Preparation should generate legend configuration","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should generate legend configuration"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Predefined Query Testing (All Active Endpoints)"],"duration":180,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Predefined Query Testing (All Active Endpoints) should handle all ANALYSIS_CATEGORIES queries without errors","invocations":1,"location":null,"numPassingAsserts":377,"retryReasons":[],"status":"passed","title":"should handle all ANALYSIS_CATEGORIES queries without errors"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Predefined Query Testing (All Active Endpoints)"],"duration":26,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Predefined Query Testing (All Active Endpoints) should test every single analysis category from ANALYSIS_CATEGORIES","invocations":1,"location":null,"numPassingAsserts":51,"retryReasons":[],"status":"passed","title":"should test every single analysis category from ANALYSIS_CATEGORIES"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Predefined Query Testing (All Active Endpoints)"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Predefined Query Testing (All Active Endpoints) should verify ALL ANALYSIS_CATEGORIES queries are tested","invocations":1,"location":null,"numPassingAsserts":39,"retryReasons":[],"status":"passed","title":"should verify ALL ANALYSIS_CATEGORIES queries are tested"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Predefined Query Testing (All Active Endpoints)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Predefined Query Testing (All Active Endpoints) should route strategic analysis queries correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should route strategic analysis queries correctly"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Predefined Query Testing (All Active Endpoints)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Predefined Query Testing (All Active Endpoints) should route competitive analysis queries correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should route competitive analysis queries correctly"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Predefined Query Testing (All Active Endpoints)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Predefined Query Testing (All Active Endpoints) should route demographic queries correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should route demographic queries correctly"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Predefined Query Testing (All Active Endpoints)"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Predefined Query Testing (All Active Endpoints) should handle city comparison queries from trends","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should handle city comparison queries from trends"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Predefined Query Testing (All Active Endpoints)"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Predefined Query Testing (All Active Endpoints) should validate analysis quality for brand difference queries","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"status":"passed","title":"should validate analysis quality for brand difference queries"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Predefined Query Testing (All Active Endpoints)"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Predefined Query Testing (All Active Endpoints) should validate legend accuracy across different analysis types","invocations":1,"location":null,"numPassingAsserts":42,"retryReasons":[],"status":"passed","title":"should validate legend accuracy across different analysis types"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","End-to-End Pipeline Integration Tests"],"duration":4,"failureDetails":[{"matcherResult":{"actual":"MP10104A_B_P","expected":"strategic_analysis_score","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"strategic_analysis_score\"\u001b[39m\nReceived: \u001b[31m\"MP10104A_B_P\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"strategic_analysis_score\"\u001b[39m\nReceived: \u001b[31m\"MP10104A_B_P\"\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/query-to-visualization-pipeline.test.ts:1503:44)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Query-to-Visualization Pipeline Integration End-to-End Pipeline Integration Tests should complete full pipeline: strategic analysis query","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"failed","title":"should complete full pipeline: strategic analysis query"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","End-to-End Pipeline Integration Tests"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration End-to-End Pipeline Integration Tests should complete full pipeline: brand difference analysis","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should complete full pipeline: brand difference analysis"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","End-to-End Pipeline Integration Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration End-to-End Pipeline Integration Tests should handle errors gracefully with fallbacks","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle errors gracefully with fallbacks"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Performance and Validation Tests"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Query-to-Visualization Pipeline Integration Performance and Validation Tests should complete pipeline within acceptable time limits","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should complete pipeline within acceptable time limits"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Performance and Validation Tests"],"duration":4,"failureDetails":[{"matcherResult":{"actual":"MP10104A_B_P","expected":"strategic_analysis_score","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"strategic_analysis_score\"\u001b[39m\nReceived: \u001b[31m\"MP10104A_B_P\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"strategic_analysis_score\"\u001b[39m\nReceived: \u001b[31m\"MP10104A_B_P\"\u001b[39m\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/query-to-visualization-pipeline.test.ts:1582:44)\n    at Promise.then.completed (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Query-to-Visualization Pipeline Integration Performance and Validation Tests should validate field consistency across pipeline","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should validate field consistency across pipeline"},{"ancestorTitles":["Query-to-Visualization Pipeline Integration","Performance and Validation Tests"],"duration":0,"failureDetails":[{}],"failureMessages":["Error: [StrategicAnalysisProcessor] Could not detect a numeric scoring field (last numeric) from records.\n    at StrategicAnalysisProcessor.process (/Users/voldeck/code/mpiq-ai-chat/lib/analysis/strategies/processors/StrategicAnalysisProcessor.ts:71:13)\n    at Object.<anonymous> (/Users/voldeck/code/mpiq-ai-chat/__tests__/query-to-visualization-pipeline.test.ts:1600:39)\n    at Promise.then.completed (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/voldeck/code/mpiq-ai-chat/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Query-to-Visualization Pipeline Integration Performance and Validation Tests should handle empty results gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle empty results gracefully"}],"endTime":1756690388697,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQuery-to-Visualization Pipeline Integration › Pipeline Step 6-7: API Call and Data Processing › should process strategic analysis response correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"strategic_analysis_score\"\u001b[39m\n    Received: \u001b[31m\"MP10104A_B_P\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 640 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 641 |\u001b[39m       \u001b[90m// Check that ConfigurationManager would override this\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 642 |\u001b[39m       expect(processedData\u001b[33m.\u001b[39mtargetVariable)\u001b[33m.\u001b[39mtoBe(\u001b[32m'strategic_analysis_score'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 643 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 644 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 645 |\u001b[39m     test(\u001b[32m'should apply ConfigurationManager field mapping authority'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/query-to-visualization-pipeline.test.ts\u001b[39m\u001b[0m\u001b[2m:642:44)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQuery-to-Visualization Pipeline Integration › Pipeline Step 8: Renderer Configuration › should generate correct renderer structure\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"strategic_analysis_score\"\u001b[39m\n    Received: \u001b[31m\"MP10104A_B_P\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 744 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 745 |\u001b[39m       expect(processedData\u001b[33m.\u001b[39mrenderer\u001b[33m.\u001b[39mtype)\u001b[33m.\u001b[39mtoBe(\u001b[32m'class-breaks'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 746 |\u001b[39m       expect(processedData\u001b[33m.\u001b[39mrenderer\u001b[33m.\u001b[39mfield)\u001b[33m.\u001b[39mtoBe(\u001b[32m'strategic_analysis_score'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 747 |\u001b[39m       expect(processedData\u001b[33m.\u001b[39mrenderer\u001b[33m.\u001b[39mclassBreakInfos)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 748 |\u001b[39m       expect(processedData\u001b[33m.\u001b[39mrenderer\u001b[33m.\u001b[39mclassBreakInfos\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m4\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Quartiles\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 749 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/query-to-visualization-pipeline.test.ts\u001b[39m\u001b[0m\u001b[2m:746:44)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQuery-to-Visualization Pipeline Integration › End-to-End Pipeline Integration Tests › should complete full pipeline: strategic analysis query\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"strategic_analysis_score\"\u001b[39m\n    Received: \u001b[31m\"MP10104A_B_P\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 1501 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 1502 |\u001b[39m       \u001b[90m// Step 8-9: Visualization\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1503 |\u001b[39m       expect(processedData\u001b[33m.\u001b[39mrenderer\u001b[33m.\u001b[39mfield)\u001b[33m.\u001b[39mtoBe(\u001b[32m'strategic_analysis_score'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m      |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 1504 |\u001b[39m       expect(processedData\u001b[33m.\u001b[39mrenderer\u001b[33m.\u001b[39mtype)\u001b[33m.\u001b[39mtoBe(\u001b[32m'class-breaks'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 1505 |\u001b[39m       expect(processedData\u001b[33m.\u001b[39mlegend\u001b[33m.\u001b[39mtitle)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Strategic Analysis Score'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 1506 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/query-to-visualization-pipeline.test.ts\u001b[39m\u001b[0m\u001b[2m:1503:44)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQuery-to-Visualization Pipeline Integration › Performance and Validation Tests › should validate field consistency across pipeline\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"strategic_analysis_score\"\u001b[39m\n    Received: \u001b[31m\"MP10104A_B_P\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 1580 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 1581 |\u001b[39m       \u001b[90m// Renderer field must match configuration\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1582 |\u001b[39m       expect(processedData\u001b[33m.\u001b[39mrenderer\u001b[33m.\u001b[39mfield)\u001b[33m.\u001b[39mtoBe(config\u001b[33m!\u001b[39m\u001b[33m.\u001b[39mtargetVariable)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m      |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 1583 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 1584 |\u001b[39m       \u001b[90m// Records must contain the renderer field\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 1585 |\u001b[39m       \u001b[36mconst\u001b[39m firstRecord \u001b[33m=\u001b[39m processedData\u001b[33m.\u001b[39mrecords[\u001b[35m0\u001b[39m]\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/query-to-visualization-pipeline.test.ts\u001b[39m\u001b[0m\u001b[2m:1582:44)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQuery-to-Visualization Pipeline Integration › Performance and Validation Tests › should handle empty results gracefully\u001b[39m\u001b[22m\n\n    [StrategicAnalysisProcessor] Could not detect a numeric scoring field (last numeric) from records.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 69 |\u001b[39m     \u001b[36mconst\u001b[39m dynamicField \u001b[33m=\u001b[39m detectLastNumericField(rawData\u001b[33m.\u001b[39mresults \u001b[36mas\u001b[39m any[])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 70 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mdynamicField) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 71 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'[StrategicAnalysisProcessor] Could not detect a numeric scoring field (last numeric) from records.'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 72 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 73 |\u001b[39m     \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mscoreField \u001b[33m=\u001b[39m dynamicField\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 74 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat StrategicAnalysisProcessor.process (\u001b[22m\u001b[2mlib/analysis/strategies/processors/StrategicAnalysisProcessor.ts\u001b[2m:71:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/query-to-visualization-pipeline.test.ts\u001b[39m\u001b[0m\u001b[2m:1600:39)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/voldeck/code/mpiq-ai-chat/__tests__/query-to-visualization-pipeline.test.ts","startTime":1756690387419,"status":"failed","summary":""}],"wasInterrupted":false}
